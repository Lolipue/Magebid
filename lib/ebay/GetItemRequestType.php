<?php
// autogenerated file 04.06.2009 09:55
// $Id: $
// $Log: $
//
//
require_once 'SKUType.php';
require_once 'NameValueListArrayType.php';
require_once 'AbstractRequestType.php';
require_once 'ItemIDType.php';

/**
 * Requests data for a specific item identified by item ID. Use noDetailLevel to 
 * return all item fields without Item.Description.Use a DetailLevel of ReturnAll 
 * to return all item fields. SeeGetItem in the eBay Web Services Guide for more 
 * information.If a listing ended more than 90 days ago, its title,price, and other 
 * item information are not returned. 
 *
 * @link http://developer.ebay.com/DevZone/XML/docs/Reference/eBay/types/GetItemRequestType.html
 *
 */
class GetItemRequestType extends AbstractRequestType
{
	/**
	 * @var ItemIDType
	 */
	protected $ItemID;
	/**
	 * @var boolean
	 */
	protected $IncludeWatchCount;
	/**
	 * @var boolean
	 */
	protected $IncludeCrossPromotion;
	/**
	 * @var boolean
	 */
	protected $IncludeItemSpecifics;
	/**
	 * @var boolean
	 */
	protected $IncludeTaxTable;
	/**
	 * @var SKUType
	 */
	protected $SKU;
	/**
	 * @var SKUType
	 */
	protected $VariationSKU;
	/**
	 * @var NameValueListArrayType
	 */
	protected $VariationSpecifics;

	/**
	 * @return ItemIDType
	 */
	function getItemID()
	{
		return $this->ItemID;
	}
	/**
	 * @return void
	 * @param ItemIDType $value 
	 */
	function setItemID($value)
	{
		$this->ItemID = $value;
	}
	/**
	 * @return boolean
	 */
	function getIncludeWatchCount()
	{
		return $this->IncludeWatchCount;
	}
	/**
	 * @return void
	 * @param boolean $value 
	 */
	function setIncludeWatchCount($value)
	{
		$this->IncludeWatchCount = $value;
	}
	/**
	 * @return boolean
	 */
	function getIncludeCrossPromotion()
	{
		return $this->IncludeCrossPromotion;
	}
	/**
	 * @return void
	 * @param boolean $value 
	 */
	function setIncludeCrossPromotion($value)
	{
		$this->IncludeCrossPromotion = $value;
	}
	/**
	 * @return boolean
	 */
	function getIncludeItemSpecifics()
	{
		return $this->IncludeItemSpecifics;
	}
	/**
	 * @return void
	 * @param boolean $value 
	 */
	function setIncludeItemSpecifics($value)
	{
		$this->IncludeItemSpecifics = $value;
	}
	/**
	 * @return boolean
	 */
	function getIncludeTaxTable()
	{
		return $this->IncludeTaxTable;
	}
	/**
	 * @return void
	 * @param boolean $value 
	 */
	function setIncludeTaxTable($value)
	{
		$this->IncludeTaxTable = $value;
	}
	/**
	 * @return SKUType
	 */
	function getSKU()
	{
		return $this->SKU;
	}
	/**
	 * @return void
	 * @param SKUType $value 
	 */
	function setSKU($value)
	{
		$this->SKU = $value;
	}
	/**
	 * @return SKUType
	 */
	function getVariationSKU()
	{
		return $this->VariationSKU;
	}
	/**
	 * @return void
	 * @param SKUType $value 
	 */
	function setVariationSKU($value)
	{
		$this->VariationSKU = $value;
	}
	/**
	 * @return NameValueListArrayType
	 */
	function getVariationSpecifics()
	{
		return $this->VariationSpecifics;
	}
	/**
	 * @return void
	 * @param NameValueListArrayType $value 
	 */
	function setVariationSpecifics($value)
	{
		$this->VariationSpecifics = $value;
	}
	/**
	 * @return 
	 */
	function __construct()
	{
		parent::__construct('GetItemRequestType', 'urn:ebay:apis:eBLBaseComponents');
		if (!isset(self::$_elements[__CLASS__]))
				self::$_elements[__CLASS__] = array_merge(self::$_elements[get_parent_class()],
				array(
					'ItemID' =>
					array(
						'required' => false,
						'type' => 'ItemIDType',
						'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
						'array' => false,
						'cardinality' => '0..1'
					),
					'IncludeWatchCount' =>
					array(
						'required' => false,
						'type' => 'boolean',
						'nsURI' => 'http://www.w3.org/2001/XMLSchema',
						'array' => false,
						'cardinality' => '0..1'
					),
					'IncludeCrossPromotion' =>
					array(
						'required' => false,
						'type' => 'boolean',
						'nsURI' => 'http://www.w3.org/2001/XMLSchema',
						'array' => false,
						'cardinality' => '0..1'
					),
					'IncludeItemSpecifics' =>
					array(
						'required' => false,
						'type' => 'boolean',
						'nsURI' => 'http://www.w3.org/2001/XMLSchema',
						'array' => false,
						'cardinality' => '0..1'
					),
					'IncludeTaxTable' =>
					array(
						'required' => false,
						'type' => 'boolean',
						'nsURI' => 'http://www.w3.org/2001/XMLSchema',
						'array' => false,
						'cardinality' => '0..1'
					),
					'SKU' =>
					array(
						'required' => false,
						'type' => 'SKUType',
						'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
						'array' => false,
						'cardinality' => '0..1'
					),
					'VariationSKU' =>
					array(
						'required' => false,
						'type' => 'SKUType',
						'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
						'array' => false,
						'cardinality' => '0..1'
					),
					'VariationSpecifics' =>
					array(
						'required' => false,
						'type' => 'NameValueListArrayType',
						'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
						'array' => false,
						'cardinality' => '0..1'
					)
				));
	}
}
?>
