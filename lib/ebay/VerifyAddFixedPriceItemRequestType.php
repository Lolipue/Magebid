<?php
// autogenerated file 04.06.2009 09:55
// $Id: $
// $Log: $
//
//
require_once 'ItemType.php';
require_once 'AbstractRequestType.php';

/**
 * Enables a seller to specify the definition of a newfixed-price listing and 
 * submit the definition to eBay without creating alisting. This enables the seller 
 * to test the item definition and getlisting fees before actually listing the 
 * item.The listing fees may be differentfrom the listing fees returned by 
 * AddFixedPriceItem.<br><br>The call validates your input fields against the 
 * schema. However, somebusiness-logic checks performed for an AddFixedPriceItem 
 * call are not executed.For more information, please see the followingKnowledge 
 * Base article about VerifyAddItem (the logic is the samefor 
 * VerifyAddFixedPriceItem):<br><br><a 
 * href="http://ebay.custhelp.com/cgi-bin/ebay.cfg/php/enduser/std_adp.php?p_faqid=912" 
 * target="_blank">VerifyAddFixedPriceItem returns Success with no Errors, but 
 * AddFixedPriceItem returns Failure with Errors</a><br><br>There may be cases in 
 * which VerifyAddFixedPriceItembehaves differently from AddFixedPriceItem and 
 * returns a different result. 
 *
 * @link http://developer.ebay.com/DevZone/XML/docs/Reference/eBay/types/VerifyAddFixedPriceItemRequestType.html
 *
 */
class VerifyAddFixedPriceItemRequestType extends AbstractRequestType
{
	/**
	 * @var ItemType
	 */
	protected $Item;

	/**
	 * @return ItemType
	 */
	function getItem()
	{
		return $this->Item;
	}
	/**
	 * @return void
	 * @param ItemType $value 
	 */
	function setItem($value)
	{
		$this->Item = $value;
	}
	/**
	 * @return 
	 */
	function __construct()
	{
		parent::__construct('VerifyAddFixedPriceItemRequestType', 'urn:ebay:apis:eBLBaseComponents');
		if (!isset(self::$_elements[__CLASS__]))
				self::$_elements[__CLASS__] = array_merge(self::$_elements[get_parent_class()],
				array(
					'Item' =>
					array(
						'required' => false,
						'type' => 'ItemType',
						'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
						'array' => false,
						'cardinality' => '0..1'
					)
				));
	}
}
?>
